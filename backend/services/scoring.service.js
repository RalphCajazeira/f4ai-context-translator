import { levenshtein } from '../utils/levenshtein.js';import { normalize } from './normalize.service.js';function cosineSim(a,b){const A=new Map(),B=new Map();a.forEach(t=>A.set(t,(A.get(t)||0)+1));b.forEach(t=>B.set(t,(B.get(t)||0)+1));const terms=new Set([...A.keys(),...B.keys()]);let dot=0,na=0,nb=0;for(const t of terms){const va=A.get(t)||0,vb=B.get(t)||0;dot+=va*vb;na+=va*va;nb+=vb*vb}return na&&nb?dot/(Math.sqrt(na)*Math.sqrt(nb)):0}export function scoreFuzzy(a,b){const an=normalize(a),bn=normalize(b);const dist=levenshtein(an,bn);const maxL=Math.max(an.length,bn.length)||1;const lev=1-dist/maxL;const cos=cosineSim(an.split(' '),bn.split(' '));return 0.6*lev+0.4*cos}